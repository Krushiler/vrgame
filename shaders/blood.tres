[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://bdlqlsupsb1qj"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_68gmb"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_x3wbj"]
constant = 0.6

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_h5vrj"]
function = 31

[sub_resource type="FastNoiseLite" id="FastNoiseLite_hb7tx"]
noise_type = 3
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_f2qmj"]
noise = SubResource("FastNoiseLite_hb7tx")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_vbte3"]
texture = SubResource("NoiseTexture2D_f2qmj")

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_g12v6"]
output_port_for_preview = 0
default_input_values = [0, 0.0, 1, 5.0]
operator = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_yh1fu"]
input_name = "uv"

[sub_resource type="VisualShaderNodeUVPolarCoord" id="VisualShaderNodeUVPolarCoord_pi0sl"]
output_port_for_preview = 0
default_input_values = [1, Vector2(0.5, 0.5), 2, 1.0, 3, 0.0]

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_0xg05"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_qdgbh"]
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_acjrh"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_ek7bd"]
constant = Color(0.73, 0.0973333, 0, 1)

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void fragment() {
// ColorConstant:9
	vec4 n_out9p0 = vec4(0.730000, 0.097333, 0.000000, 1.000000);


// Input:4
	vec2 n_out4p0 = UV;


	vec2 n_out5p0;
// UVPolarCoord:5
	vec2 n_in5p1 = vec2(0.50000, 0.50000);
	float n_in5p2 = 1.00000;
	float n_in5p3 = 0.00000;
	{
		vec2 __dir = n_out4p0 - n_in5p1;
		float __radius = length(__dir) * 2.0;
		float __angle = atan(__dir.y, __dir.x) * 1.0 / (PI * 2.0);
		n_out5p0 = vec2(__radius * n_in5p2, __angle * n_in5p3);
	}


	vec3 n_out6p0;
// ColorFunc:6
	{
		vec3 c = vec3(n_out5p0, 0.0);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out6p0 = vec3(max2, max2, max2);
	}


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out6p0.x;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// FloatOp:3
	float n_in3p1 = 5.00000;
	float n_out3p0 = pow(n_out2p0.x, n_in3p1);


// VectorOp:8
	vec3 n_out8p0 = vec3(n_out7p0) * vec3(n_out3p0);


// VectorOp:10
	vec3 n_out10p0 = vec3(n_out9p0.xyz) * n_out8p0;


// FloatConstant:11
	float n_out11p0 = 0.600000;


// FloatFunc:12
	float n_out12p0 = 1.0 - n_out8p0.x;


// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out11p0;
	ALPHA_SCISSOR_THRESHOLD = n_out12p0;


}
"
nodes/fragment/0/position = Vector2(1480, -100)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_vbte3")
nodes/fragment/2/position = Vector2(-520, 380)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatOp_g12v6")
nodes/fragment/3/position = Vector2(-160, 340)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_yh1fu")
nodes/fragment/4/position = Vector2(-600, 140)
nodes/fragment/5/node = SubResource("VisualShaderNodeUVPolarCoord_pi0sl")
nodes/fragment/5/position = Vector2(-200, -80)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorFunc_0xg05")
nodes/fragment/6/position = Vector2(100, -100)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_qdgbh")
nodes/fragment/7/position = Vector2(140, 100)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorOp_acjrh")
nodes/fragment/8/position = Vector2(460, 320)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorConstant_ek7bd")
nodes/fragment/9/position = Vector2(460, 40)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_68gmb")
nodes/fragment/10/position = Vector2(800, 60)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatConstant_x3wbj")
nodes/fragment/11/position = Vector2(1000, 280)
nodes/fragment/12/node = SubResource("VisualShaderNodeFloatFunc_h5vrj")
nodes/fragment/12/position = Vector2(740, 460)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 3, 0, 8, 1, 7, 0, 8, 0, 9, 0, 10, 0, 8, 0, 10, 1, 10, 0, 0, 0, 8, 0, 12, 0, 12, 0, 0, 19, 11, 0, 0, 1)
